server.port=8443
server.address=0.0.0.0
#DataSource settings for mysql
#ssl config - self-signed certificate, if enabled
server.ssl.enabled=true
server.ssl.key-store=file:/home/conf/acapi/acapi${SEP}${DOMAIN}-keystore
server.ssl.key-store-password=${CERT_PASS_ACAPI}
server.ssl.key-store-provider=SUN
server.ssl.key-store-type=jks
server.ssl.key-alias=acapi${SEP}${DOMAIN}
server.ssl.key-password=${CERT_PASS_ACAPI}

logging.config=/home/conf/acapi/logback.xml
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false

#datasource pooling config
spring.datasource.tomcat.initial-size=5
spring.datasource.tomcat.max-active=10
spring.datasource.tomcat.min-idle=5
spring.datasource.tomcat.max-idle=10
spring.datasource.tomcat.max-wait=5000
spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.tomcat.validation-query-timeout=3000
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.time-between-eviction-runs-millis=30000
spring.datasource.tomcat.validation-interval=30000


# HTTP encoding (HttpEncodingProperties)
spring.mandatory-file-encoding=UTF-8
spring.http.encoding.charset=UTF-8
# the encoding of HTTP requests/responses
spring.http.encoding.enabled=true
# enable http encoding support
spring.http.encoding.force=true
# force the configured encoding
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain

aas.clientid=cloud-api
aas.secret=PtkSjCuB3M+HRCTntyZhd2jkVsnE#z8d
aas.host=https://aas${SEP}${DOMAIN}:9990
auth.filter.run.as.uris=/acapi/v3/domains/public,/acapi/v3/password/reset,/acapi/v3/password/code

keycloak.realm = ${AIS_REALM:master}
keycloak.auth-server-url = ${AIS_HOST:}/auth
keycloak.ssl-required = external
keycloak.resource = ${AIS_CLIENT_ID_ACAPI:}
keycloak.use-resource-role-mappings = false

auth.url=${AIS_HOST:}/auth/realms/${AIS_REALM:master}/protocol/openid-connect/token
auth.clientid=${AIS_CLIENT_ID_ACAPI:}
auth.secret=${AIS_CLIENT_SECRET_ACAPI:}



geolocation.fetch.enabled=true

population.history.duration=360

master.db.url=jdbc:mysql://${MASTERDB_URL}/${MASTERDB_DB}
master.db.ro.url=jdbc:mysql://${MASTERDB_RO_URL:${MASTERDB_URL}}/${MASTERDB_DB}
master.db.user=${MASTERDB_USER}
master.db.password=${MASTERDB_PASS}

#Rate limitter default limit. 0 disables the limitter
rate.limitter.limit=0

#ondemand launcher configs
ondemand.launcher.loginService.url=${ONDEMAND_URL}/backend/session.php
ondemand.launcher.url=${ONDEMAND_URL}/api/fetch/odcred/
ondemand.launcher.timeout.sec=59
ondemand.launcher.30d.loginService.url=${ONDEMAND_30D_URL:}/backend/session.php
ondemand.launcher.30d.url=${ONDEMAND_30D_URL:}/api/fetch/odcred/
ondemand.launcher.30d.timeout.sec=119
ondemand.launcher.user=${ONDEMAND_USER}
ondemand.launcher.password=${ONDEMAND_PASS}
ondemand.launcher.defaultDur.tag=1d
ondemand.launcher.defaultDur.hour=12

#ondemandcache mysql host timetolive
ondemand.cache.timetolive=${ONDEMAND_CACHE_TTL}
ondemand.cache.maxentry=${ONDEMAND_CACHE_ENTRY}

#mesh team lookup
ondemand.teamlookup.url=${ONDEMAND_URL}/api/fetch/odpeers/

#node lookup
ondemand.nodelookup.url=${ONDEMAND_URL}/api/fetch/odlookup/


#cache cleanup
ondemand.cache.cleanup.url=${ONDEMAND_URL}/api/fetch/odclear/

#non-blocking ondemand trigger
ondemand.trigger.url=${ONDEMAND_URL}/api/fetch/odtrigger/


#adhoc population file reports configs
adhoc.filereports.loginService.url=${ADHOC_API_URL}/backend/session.php
adhoc.filereports.reportList.url=${ADHOC_API_URL}/api/fetch/report-list/
adhoc.filereports.reportGet.url=${ADHOC_API_URL}/api/fetch/report-get/
adhoc.filereports.user=${ADHOC_API_USER}
adhoc.filereports.password=${ADHOC_API_PASS}

#raw data api configs
adhoc.bulk.loginService.url=${BULK_API_URL}/backend/session.php
adhoc.bulk.reportList.url=${BULK_API_URL}/api/fetch/bulk-list
adhoc.bulk.reportGet.url=${BULK_API_URL}/api/v1/bulk-get/
adhoc.bulk.user=${BULK_API_USER}
adhoc.bulk.password=${BULK_API_PASS}

#infradomains sync fetch url
infra.domains.fetchapi.loginService.url=${ONDEMAND_URL}/backend/session.php
infra.domains.fetchapi.syncdomains.url=${ONDEMAND_URL}/api/fetch/infra_domain_sync
infra.domains.fetchapi.getdomains.url=${ONDEMAND_URL}/api/fetch/infra_domain_get
infra.domains.fetchapi.user=${ONDEMAND_USER}
infra.domains.fetchapi.password=${ONDEMAND_PASS}

#provision greeter sync fetch url
infra.redirect.fetchapi.add.url=${ONDEMAND_URL}/api/fetch/infra_redirection_add
infra.redirect.fetchapi.update.url=${ONDEMAND_URL}/api/fetch/infra_redirection_update
infra.redirect.fetchapi.delete.url=${ONDEMAND_URL}/api/fetch/infra_redirection_delete
infra.redirect.fetchapi.get.url=${ONDEMAND_URL}/api/fetch/infra_redirection_get

# user data request fetch url
userDataRequest.fetchapi.loginService.url=${ONDEMAND_URL}/backend/session.php
userDataRequest.fetchapi.GET.url=${ONDEMAND_URL}/api/fetch/userfiles-download/
userDataRequest.fetchapi.PACK.url=${ONDEMAND_URL}/api/fetch/userfiles-pack/
userDataRequest.fetchapi.REMOVE.url=${ONDEMAND_URL}/api/fetch/userfiles-purge/
userDataRequest.fetchapi.user=${ONDEMAND_USER}
userDataRequest.fetchapi.password=${ONDEMAND_PASS}

careview.threadpool.threadcount.min=50
careview.threadpool.threadcount.max=800
careview.threadpool.available.idleTime=900

homeAlarm.countDownLatch.waitSecond=10
agg.gettopology.countDownLatch.waitSecond=15
agg.gettopology.nodecount.limit=8


#geo location lookup for careview
geo.location.lookup.url=${GEO_LOCATION_URL}
geo.location.lookup.credential=${GEO_LOCATION_CREDENTIAL}
geo.location.cache.expire.week=3


#stb videonode configs
videonode.currentvideo.duration.min=60
videonode.qoe.groupby.duration=300
videonode.qoe.Underruns.threshold=2
videonode.qoe.PacketDiscontinuityCounter.threshold=4
videonode.qoe.BitrateDownChangeCount.threshold=1
videonode.qoe.SelectedBitrate.threshold=-1

#population node list config
population.nodelist.limit.day=7

server.ssl.ciphers=${SSL_CIPHERS:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384}
server.ssl.enabled-protocols=${SSL_PROTOCOLS:TLSv1.2,TLSv1.3}

#restTemplate connection pool size
fetchApi.restTemplate.pool.maxPerRoute=800
fetchApi.restTemplate.pool.maxTotal=800
fetchApi.restTemplate.timeout=41
fetchApi.30d.restTemplate.pool.maxPerRoute=40
fetchApi.30d.restTemplate.pool.maxTotal=40
fetchApi.30d.restTemplate.timeout=41
general.restTemplate.pool.maxPerRoute=150
general.restTemplate.pool.maxTotal=450
general.restTemplate.timeout=59

#login manager service params
loginManager.token.refresh.initial.delay=5
loginManager.token.refresh.in.minutes=10


#Device License Population Contract Param
deviceLicense.timeRange.in.month=12


query.auth.key=${QUERY_AUTH_KEY:}
query.auth.clientid=${QUERY_AUTH_CLIENTID:}
query.auth.secret=${QUERY_AUTH_SECRET:}
query.auth.domain=${QUERY_AUTH_DOMAIN:}

audit.allowed.methods=POST,PUT,DELETE

#careview options
careview.timeseries.30d.groupby=600

#send Reset Mail Key
password.reset.enc.key=${PASSWD_RESET_ENC_KEY:fpSObA3Bw9FtmLPfq2DTbs11}

#notification params
notification.bucket=airties-remotemanager
notification.file=notifications.json
notification.defaultLang=en
notification.cache.timetolive=3600               
notification.cache.maxentry=100
aws.s3.accesskey=
aws.s3.secretkey=
